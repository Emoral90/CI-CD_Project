# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
    paths: # Specify filepaths to control workflow
      - "src/**" # Only run if files in src directory are changed
      - "tests/**" # Only run if files in tests directory are changed
      - ".github/workflows/demo1.yml" # Run if this workflow file is changed
  pull_request:
    branches: [ "main" ]
    paths:
      - "src/**"
      - "tests/**"
      - ".github/workflows/demo1.yml" 

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains jobs that will run my tests
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install requests pytest

      - name: Start local API server 
        run: |
          python3 server.py &
          sleep 3 # Wait for server to start up

      - name: Run API tests
        run: pytest test_server.py

      - name: Run stress tests
        run: python3 stress_test.py

      - name: Stop server running in background
        run: pkill -f server.py || true

  # This job will deploy to a staging environment after tests pass
  deploy-to-staging:
    needs: test # This ensures deployment only runs after tests pass
    runs-on: ubuntu-latest # Or a specific runner for staging environment
    environment:
      name: staging
      url: http://127.0.0.1:8790 # URL to your staging environment
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        # If your build artifact is from the 'test' job, you'd download it here
        # - name: Download build artifact
        #   uses: actions/download-artifact@v4
        #   with:
        #     name: my-app-build

      - name: Deploy to Staging Environment
        run: |
          echo "Deploying to staging..."
          # Your deployment commands go here
          echo "Deployment to staging complete!"
